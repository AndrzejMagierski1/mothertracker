
#ifndef INTERFACE_INTERFACEFXDESC_H_
#define INTERFACE_INTERFACEFXDESC_H_


const char fxDescriptions[FX_COUNT][150] =
{
	//Sequencer::strFxConsts::enFxType::FX_TYPE_NONE,
	{
			"none none none\nnone none none \nnone none none \n\nmin: 0 \nmax: 100 \ndefault: 0"
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_OFF,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_VELOCITY,
	{
			"Changes(overrides) the Velocity of Instrument"
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PANNING,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_MICROTUNING,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_GLIDE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_TEMPO,
	{
			"Changes Pattern Tempo. Also handy to set your custom swing or groove. Warto≈õci co 2"
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_MICROMOVE,
	{
			"Slightly moves the step. w procentach"
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_CHANCE,
	{
			"Chance of step being played (in %)."
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_ROLL,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_RANDOM_NOTE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_RANDOM_INSTRUMENT,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_RANDOM_VALUE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_RANDOM_VELOCITY,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_REVERSE_PLAYBACK,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_POSITION,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_SAMPLE_SLICE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_VOLUME_LFO,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PANNING_LFO,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_FILTER_LFO,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_POSITION_LFO,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_FILTER_LOWPASS,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_FILTER_BANDPASS,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_FILTER_HIGHPASS,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_REVERB_SEND,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_SEND_CC_A,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_SEND_CC_B,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_SEND_CC_C,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_SEND_CC_D,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_SEND_CC_E,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PROGRAM_CHANGE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PROGRAM_CHANGE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PROGRAM_CHANGE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PROGRAM_CHANGE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PROGRAM_CHANGE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PROGRAM_CHANGE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PROGRAM_CHANGE,
	{
			""
	},
	//Sequencer::strFxConsts::enFxType::FX_TYPE_PROGRAM_CHANGE,
	{
			""
	},

};


#endif /* INTERFACE_INTERFACEFXDESC_H_ */
